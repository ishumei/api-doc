[
  {
    "type": "title-1",
    "value": "Asynchronous Batch Requests"
  },
  {
    "type": "desc",
    "value": "Used for asynchronous batch image upload and detection, with query interface to check results. It can assist you in identifying political, pornographic, advertising, and terrorism risks in images; at the same time, it can be combined with your business scenarios to recognize faces, logos, animals, and plants, etc."
  },
  {
    "type": "title-2",
    "value": "Interface Documentation"
  },
  {
    "type": "desc",
    "value": "Batch detection interface, after invoking the audit, the audit results can be obtained through query methods."
  },
  {
    "type": "title-3",
    "value": "Interface Requirements"
  },
  {
    "type": "desc",
    "value": "Communication Protocol: HTTP or HTTPS protocol\nRequest Method: POST method\nCharacter Encoding: utf-8\nParameter Format: All request parameters and response parameters are in JSON format."
  },
  {
    "type": "title-3",
    "value": "Image Requirements"
  },
  {
    "type": "desc",
    "value": "Image Types: URL, BASE64\nImage Formats: jpg, jpeg, png, webp, gif, tiff, tif, heif, heic, avif, apng, svg (static image detection is currently supported for svg)\nImage Resolution: It is recommended that the image resolution is not less than `256*256`, and images with resolutions ranging from `20*20` to `6000*6000` are supported.\nImage Size: The image size is limited to 30M.\nFrame Extraction Notes: Long images are not split by default; for splitting, please contact Shu Mei, and additional charges will apply. The number of frames for gifs is determined by the input parameters."
  },
  {
    "type": "title-3",
    "value": "Audit Time"
  },
  {
    "type": "desc",
    "value": "Suggested timeout: 5 seconds.\nInternal detection logic: The response time of the image detection interface depends on the download time of the image. Ensure that the storage service where the image to be detected is located is stable and reliable. The connection timeout for downloading images at Shumei is 2 seconds, and the read timeout is 3 seconds (if it fails, it will be retried once). Batch image services are processed in parallel in two parts internally, with an average processing time of about 500 milliseconds, which is related to the request type and image size."
  },
  {
    "type": "title-3",
    "value": "Historical Versions"
  },
  {
    "herf": "/docs/tj/image/history/developDoc",
    "type": "link",
    "value": "Historical Versions"
  },
  {
    "type": "title-2",
    "value": "Request"
  },
  {
    "type": "title-3",
    "value": "Request Address"
  },
  {
    "header": [
      {
        "key": "description",
        "title": "cluster"
      },
      {
        "key": "url",
        "title": "Request address"
      },
      {
        "key": "supportProduct",
        "title": "Supported Product List"
      }
    ],
    "type": "table",
    "value": [
      {
        "description": "Beijing Image Cluster",
        "supportProduct": "Chinese picture",
        "url": "http://api-img-bj.fengkongcloud.com/v4/saas/async/imgs"
      },
      {
        "description": "Shanghai Image Cluster",
        "supportProduct": "Chinese picture",
        "url": "http://api-img-sh.fengkongcloud.com/v4/saas/async/imgs"
      }
    ]
  },
  {
    "type": "title-3",
    "value": "Request Parameters"
  },
  {
    "header": [
      {
        "key": "req_name",
        "title": "Parameter Name"
      },
      {
        "key": "type",
        "title": "Type"
      },
      {
        "key": "required",
        "title": "Required"
      },
      {
        "key": "length",
        "title": "Maximum Length"
      },
      {
        "key": "param_description",
        "title": "Parameter Description"
      }
    ],
    "type": "table",
    "value": [
      {
        "length": "20",
        "param_description": "Company Key. Used for permission authentication, provided by ShuMei when activating services.see email for details.",
        "req_name": "accessKey",
        "required": "Y",
        "type": "string"
      },
      {
        "length": "64",
        "param_description": "Event identifier. It is necessary to agree on the values with Shumei.see email for details.",
        "req_name": "eventId",
        "required": "Y",
        "type": "string"
      },
      {
        "length": "64",
        "param_description": "Application Identifier. This field is strictly validated and requires prior agreement with Shumei on the value to be used.see email for details.",
        "req_name": "appId",
        "required": "Y",
        "type": "string"
      },
      {
        "length": "64",
        "param_description": "Risk types that need to be identified. At least one of type or businessType must be provided, with the following optional values:\n\nPOLITY: Identification of politically sensitive content\nEROTIC: Recognition of erotic and sexy violations\nVIOLENT: Recognition of violent and prohibited content\nQRCODE: QR code recognition\nADVERT: Advertisement recognition\nIMGTEXTRISK: Image text violation recognition (if you need to identify violations in the text within an image, be sure to use the image text violation recognition feature)\nBOCR: OCR support for small languages and automatic language detection (only available in the Singapore cluster)\n\nIf multiple functions need to be recognized, connect them with an underscore, such as POLITY_QRCODE_ADVERT for a combination of politically sensitive, QR code, and advertisement recognition.",
        "req_name": "type",
        "required": "N",
        "type": "string"
      },
      {
        "length": "128",
        "param_description": "Business types that need to be identified. Either `businessType` or `type` must be provided, with optional values seen in the business label types.",
        "req_name": "businessType",
        "required": "N",
        "type": "string"
      },
      {
        "length": "-",
        "param_description": "Requested data content",
        "req_name": "data",
        "required": "Y",
        "son": [
          {
            "length": "64",
            "param_description": "User account identifier. It is recommended to pass in the user ID, which can be used for risk identification in dimensions such as spamming and advertising.",
            "req_name": "tokenId",
            "required": "Y",
            "type": "string"
          },
          {
            "length": "-",
            "param_description": "The array of images to be detected should have a length of no more than 12.",
            "req_name": "imgs",
            "required": "Y",
            "son": [
              {
                "length": "30",
                "param_description": "Client-side request unique identifier",
                "req_name": "btId",
                "required": "Y",
                "type": "string"
              },
              {
                "length": "1024",
                "param_description": "Images to be detected can be used with their base64 encoding or image URL links.",
                "req_name": "img",
                "required": "Y",
                "type": "string"
              },
              {
                "length": "1024",
                "param_description": "The reference image for detection and comparison. When the `businessType` field in the request parameter contains the label `FACECOMPARE`, it exists.\nYou can use base64-encoded image data or the URL link of the image. Supported formats include:\njpg, jpeg, png, webp, gif, tiff, tif, heif\nIt is recommended that the image pixel size is not less than 256*256, and the maximum image size is 10MB.\nThe reference image currently does not support long image and animated image formats.",
                "req_name": "imgCompareBase",
                "required": "N",
                "type": "string"
              }
            ],
            "type": "array"
          },
          {
            "length": "128",
            "param_description": "Customer-defined data ID. Can be used for retrieving data in the ShuMei SaaS backend.",
            "req_name": "dataId",
            "required": "N",
            "type": "string"
          },
          {
            "length": "128",
            "param_description": "Shumei device fingerprint identifier. Generated by the ShuMei SDK, used for user behavior analysis.",
            "req_name": "deviceId",
            "required": "N",
            "type": "string"
          },
          {
            "length": "-",
            "param_description": "User Gender, suggested values:\nmale: Male\nfemale: Female\nambiguity: Ambiguous",
            "req_name": "gender",
            "required": "N",
            "type": "string"
          },
          {
            "length": "-",
            "param_description": "GIF frame extraction frequency. Dedicated to GIF detection, with a default value of 1. Extract one frame for detection every 'interval' images.\nWhen 'interval' multiplied by 'maxFrame' is less than the number of images contained in the picture, the frame extraction interval will automatically be adjusted to the number of images contained in the picture divided by 'maxFrame' to improve overall detection effectiveness.",
            "req_name": "interval",
            "required": "N",
            "type": "int32"
          },
          {
            "length": "64",
            "param_description": "Client's public IP address. This parameter is used for user behavior analysis on the IP dimension.",
            "req_name": "ip",
            "required": "N",
            "type": "string"
          },
          {
            "length": "-",
            "param_description": "Language type. When the `type` contains `IMGTEXTRISK`, you can specify the corresponding language type for detection (default is Chinese), with the following options:\nzh: Chinese\nen: English\nar: Arabic",
            "req_name": "lang",
            "required": "N",
            "type": "string"
          },
          {
            "length": "-",
            "param_description": "User Level, different interception strategies can be configured for users of different levels. Optional values: 0: The lowest level of users, typically including newly registered, completely inactive, or users with a level of 0, etc.;\n1: Lower-level users, typically including low-active or low-level users, etc.;\n2: Medium-level users, typically including users with certain activity or medium-level users, etc.;\n3: Higher-level users, typically including high-active or high-level users, etc.;\n4: The highest level of users, typically including paying users, VIP users, etc.",
            "req_name": "level",
            "required": "N",
            "type": "int32"
          },
          {
            "length": "-",
            "param_description": "The maximum number of frames for capturing animated images. When capturing frames from GIFs and other animated images, the maximum is 20 frames, with a default of 3 frames. Billing is based on the actual number of frames captured; for example, if the default is to capture 3 frames, the billing is done according to 3 frames.",
            "req_name": "maxFrame",
            "required": "N",
            "type": "int32"
          },
          {
            "length": "64",
            "param_description": "The tokenId of the message recipient consists of a string of digits, letters, underscores, and hyphens, with a length of no more than 64 characters.",
            "req_name": "receiveTokenId",
            "required": "N",
            "type": "string"
          },
          {
            "length": "-",
            "param_description": "Auxiliary parameters. Information used to assist detection.",
            "req_name": "extra",
            "required": "N",
            "son": [
              {
                "length": "64",
                "param_description": "Live broadcast room/Game room number, allowing for the development of different strategies for individual rooms.",
                "req_name": "room",
                "required": "N",
                "type": "string"
              },
              {
                "length": "1024",
                "param_description": "Customers transmit pass-through fields. ShuMei will not recognize or process these fields internally and will return them to the user along with the results.",
                "req_name": "passThrough",
                "required": "N",
                "type": "object"
              }
            ],
            "type": "object"
          }
        ],
        "type": "object"
      },
      {
        "length": "-",
        "param_description": "Select the language type for the return label\nAvailable values:\nzh: Chinese\nen: English\nDefault is to return Chinese labels if not specified",
        "req_name": "acceptLang",
        "required": "N",
        "type": "string"
      }
    ]
  },
  {
    "type": "title-2",
    "value": "response"
  },
  {
    "type": "title-3",
    "value": "Return parameters"
  },
  {
    "header": [
      {
        "key": "req_name",
        "title": "Parameter Name"
      },
      {
        "key": "type",
        "title": "Type"
      },
      {
        "key": "required",
        "title": "Is it mandatory to return?"
      },
      {
        "key": "param_description",
        "title": "Parameter Description"
      }
    ],
    "type": "table",
    "value": [
      {
        "length": "-",
        "param_description": "Here are the translations for the given codes:\n\n1100: Success\n1901: QPS limit exceeded\n1902: Invalid parameter\n1903: Service failure\n1911: Image download failed\n9101: No permission to operate",
        "req_name": "message",
        "required": "Y",
        "type": "string"
      },
      {
        "length": "-",
        "param_description": "1100: Success\n1901: QPS Limit Exceeded\n1902: Invalid Parameters\n1903: Service Failure\n1911: Image Download Failed\n9101: No Permission to Operate",
        "req_name": "code",
        "required": "Y",
        "type": "int32"
      },
      {
        "length": "-",
        "param_description": "Multiple image serial numbers",
        "req_name": "requestIds",
        "required": "Y",
        "son": [
          {
            "length": "30",
            "param_description": "Client-side request unique identifier",
            "req_name": "btId",
            "required": "Y",
            "type": "string"
          },
          {
            "length": "32",
            "param_description": "Shumei requests a unique identifier.",
            "req_name": "requestId",
            "required": "Y",
            "type": "string"
          }
        ],
        "type": "array"
      }
    ]
  },
  {
    "type": "title-2",
    "value": "Example"
  },
  {
    "type": "title-3",
    "value": "Request Example"
  },
  {
    "type": "json",
    "value": {
      "accessKey": "xxxxx",
      "appId": "default",
      "data": {
        "imgs": [
          {
            "btId": "123",
            "img": "xxxxxx"
          },
          {
            "btId": "456",
            "img": "xxxxxx"
          }
        ],
        "tokenId": "username123"
      },
      "eventId": "xxxxx",
      "type": "xxxxxx"
    }
  },
  {
    "type": "title-3",
    "value": "Return Example"
  },
  {
    "type": "json",
    "value": {
      "code": 1100,
      "message": "Success",
      "requestIds": [
        {
          "btId": "123",
          "requestId": "d123456322adasfajfafjaskfjaf"
        },
        {
          "btId": "456",
          "requestId": "d123456322adasfajfafjaskfjaf"
        }
      ]
    }
  },
  {
    "type": "title-2",
    "value": "Appendix"
  },
  {
    "type": "title-3",
    "value": "Business Label Types"
  },
  {
    "header": [
      {
        "key": "type",
        "title": "Business Label Recognition Types"
      },
      {
        "key": "description",
        "title": "Type Description"
      },
      {
        "key": "remark",
        "title": "Remarks"
      }
    ],
    "type": "table",
    "value": [
      {
        "description": "Face-Age",
        "remark": "Capable of identifying minors",
        "type": "AGE"
      },
      {
        "description": "Face-Gender",
        "type": "GENDER"
      },
      {
        "description": "Face - Attractiveness",
        "type": "BEAUTY"
      },
      {
        "description": "Face-Ethnicity",
        "remark": "African descent, Caucasian descent, Asian descent",
        "type": "RACE"
      },
      {
        "description": "Face-to-Face Detection",
        "remark": "Recognizing no faces, real people, masked faces, frontal faces, and profile faces.",
        "type": "FACEDETECTION"
      },
      {
        "description": "Face - Forged Face",
        "remark": "",
        "type": "FAKEFACE"
      },
      {
        "description": "Face-to-Face Comparison",
        "remark": "",
        "type": "FACECOMPARE"
      },
      {
        "description": "Character - Public Figure",
        "remark": "Recognizing well-known celebrities, internet celebrities, etc.",
        "type": "PUBLICFIGURE"
      },
      {
        "description": "Character - Disreputable Character",
        "remark": "",
        "type": "TAINTEDSTAR"
      },
      {
        "description": "Portrait - Portrait Pose",
        "remark": "Recognizing sitting postures, kneeling postures, etc.",
        "type": "POSTURE"
      },
      {
        "description": "Portrait - Portrait attire",
        "remark": "Recognizing Jk, Hanfu, and other fashion styles.",
        "type": "DRESS"
      },
      {
        "description": "Portrait - Portrait Aura",
        "remark": "Mature gentleman, beautiful goddess, etc.",
        "type": "TEMPERAMENT"
      },
      {
        "description": "human body",
        "remark": "Recognizing features such as hair, eyes, and nose.",
        "type": "BODY"
      },
      {
        "description": "Screen Properties - Screen Type",
        "remark": "Recognizing anime, emoticons, etc.",
        "type": "PICTUREFORM"
      },
      {
        "description": "Picture Properties - Picture Structure",
        "remark": "Recognizing grid diagrams, bridge diagrams, etc.",
        "type": "PICTURESTRUCT"
      },
      {
        "description": "Image Properties - Low Quality Image",
        "remark": "Recognizing blurs, smudges, mosaics, etc.",
        "type": "LOWVISION"
      },
      {
        "description": "Picture Properties - Low Quality Content",
        "remark": "Identifying dense points, lines, and clusters of insects, etc.",
        "type": "LOWCONTNET"
      },
      {
        "description": "Picture Properties - Live Streaming Image",
        "remark": "Identify live streams such as bed live streaming, driving live streaming, etc.",
        "type": "LIVEPICTURE"
      },
      {
        "description": "Screen Properties - APP Screenshot (Content Repurposing)",
        "remark": "Recognizing screenshots from social media feeds, chat screenshots, etc.",
        "type": "SCREENSHOT"
      },
      {
        "description": "Scene Theme - Fitness",
        "type": "FITNESS"
      },
      {
        "description": "Theme - Gastronomy",
        "type": "CATE"
      },
      {
        "description": "Theme - Music",
        "type": "MUSIC"
      },
      {
        "description": "Theme - Sports",
        "type": "SPORTS"
      },
      {
        "description": "Scene Theme - Natural Landscape",
        "remark": "Recognizing the sky, the ocean, grasslands, etc.",
        "type": "SCENERY"
      },
      {
        "description": "Scene Theme - Urban Landscape",
        "remark": "Recognizing street views",
        "type": "CITYVIEW"
      },
      {
        "description": "LOGO-3C Electronic Brand",
        "remark": "Recognize logos such as Huawei, Xiaomi, OPPO, etc.",
        "type": "3CPRODUCTSLOGO"
      },
      {
        "description": "LOGO - Shopping Comparison App",
        "remark": "Recognizing logos such as Pinduoduo.",
        "type": "SHOPPINGAPPSLOGO"
      },
      {
        "description": "LOGO - Photography and Beautification Apps",
        "remark": "Recognize logos such as Kuai剪辑 (Fast Edit), Miaopai, etc.",
        "type": "RETOUCHAPPSLOGO"
      },
      {
        "description": "LOGO - Social Communication App",
        "remark": "Recognize logos such as Weibo, Xiaohongshu, etc.",
        "type": "SOCIALAPPSLOGO"
      },
      {
        "description": "Logo - Material Copyright Category Applications",
        "remark": "Recognize logos such as CFP",
        "type": "PHOTOMATERIALLOGO"
      },
      {
        "description": "LOGO - News Reading App",
        "remark": "Recognizing logos such as Sina, Visual China, etc.",
        "type": "NEWSAPPSLOGO"
      },
      {
        "description": "LOGO - Audio-Video Entertainment Application",
        "remark": "Recognize logos such as TikTok, Kuaishou, etc.",
        "type": "ENTERTAINMENTAPPSLOGO"
      },
      {
        "description": "LOGO-Sports Events",
        "remark": "Recognizing logos such as the Olympic Games.",
        "type": "SPORTSLOGO"
      },
      {
        "description": "LOGO - Footwear and Apparel Brand",
        "remark": "Recognize logos such as Vans, H\u0026M, etc.",
        "type": "APPARELLOGO"
      },
      {
        "description": "LOGO - Brand for Jewelry and Accessories",
        "remark": "Recognizing logos such as Audemars Piguet and Nomos.",
        "type": "ACCESSORIESLOGO"
      },
      {
        "description": "LOGO - Cosmetics Brand",
        "remark": "Recognize logos such as LOTTE, EyesLipsFace, etc.",
        "type": "COSMETICSLOGO"
      },
      {
        "description": "LOGO - Food Category Brand",
        "remark": "Recognizing logos such as Starbucks and LOTTE.",
        "type": "FOODLOGO"
      },
      {
        "description": "LOGO - Car Trading Platform",
        "remark": "Recognize logos such as CheDi, Bitauto, Pacific Auto, and Aika.",
        "type": "AUTOTRADEAPPSLOGO"
      },
      {
        "description": "Items - Means of Transportation",
        "type": "VEHICLE"
      },
      {
        "description": "Items - Construction",
        "type": "BUILDING"
      },
      {
        "description": "Items - Tableware",
        "type": "TABLEWARE"
      },
      {
        "description": "Items - Food",
        "type": "FOOD"
      },
      {
        "description": "Items - Household Appliances",
        "type": "HOMEAPPLICATION"
      },
      {
        "description": "Items - Office Supplies",
        "type": "OFFICESUPPLIES"
      },
      {
        "description": "Items - Clothing Accessories",
        "type": "FASHION"
      },
      {
        "description": "Items - Sports Equipment",
        "type": "SPORTEQUIPMENT"
      },
      {
        "description": "Items - Toys",
        "type": "TOY"
      },
      {
        "description": "Items - Cosmetics",
        "type": "MAKEUP"
      },
      {
        "description": "Items - Pharmaceuticals",
        "type": "DRUGS"
      },
      {
        "description": "Item - Painting",
        "type": "PAINTING"
      },
      {
        "description": "Items - Electronic Products",
        "type": "ELECTRONIC"
      },
      {
        "description": "Item - Lottery - Scratch Card",
        "type": "LOTTERY"
      },
      {
        "description": "Human - Abnormal Torso",
        "type": "DEFORMITY"
      },
      {
        "description": "Item - Medical Imaging",
        "type": "MEDICALIMAGE"
      },
      {
        "description": "Items - Home Furnishings",
        "type": "FURNITURE"
      },
      {
        "description": "Items - Daily Necessities",
        "type": "DAILYSUPPLIES"
      },
      {
        "description": "Items - Astrological Divination",
        "type": "CONSTELLATION"
      },
      {
        "description": "Items - Kitchenware",
        "type": "KITCHENWARE"
      },
      {
        "description": "Items - Souvenirs",
        "type": "KEEPSAKE"
      },
      {
        "description": "Animals - Mammals",
        "type": "MAMMAL"
      },
      {
        "description": "Animals - Birds",
        "type": "BIRDS"
      },
      {
        "description": "Animals - Reptiles",
        "type": "REPTILE"
      },
      {
        "description": "Animal - Fish",
        "type": "FISH"
      },
      {
        "description": "Animals - Arthropods",
        "type": "ARTHROPOD"
      },
      {
        "description": "Animals - Cnidarians",
        "type": "COELENTERATE"
      },
      {
        "description": "Animals - Mollusks",
        "type": "MOLLUSKS"
      },
      {
        "description": "Animals - Crustacea",
        "type": "CRUSTACEAN"
      },
      {
        "description": "plants",
        "type": "PLANT"
      },
      {
        "description": "venue",
        "remark": "Recognizing places such as bathrooms, hotels, and kitchens.",
        "type": "SETTING"
      },
      {
        "description": "Extreme Weather Recognition",
        "remark": "floods, heavy rain, dust storms, ice, etc.",
        "type": "EXTREMEWEATHER"
      },
      {
        "description": "License Plate Recognition",
        "type": "LICENCEPLATE"
      }
    ]
  }
]